print(j)
print("Anything")
print(v[k])
print(v[l])
}
if ((v[k]==v[l])&&(k==l)&&(counter[k]==0)&&(counter[l]==0))
#((v[i]==v[j])&&(i!=j)&&(counter[j]==0)&&(counter[i]==0))
{
print("Dittos")
print(v[k])
print(v[l])
p_v<-c(p_v,p_x[k])
}
}
}
counter
p_v
p_v<-double()
seq<-1:5
counter<-c(0,0,0,0,0)
for (i in v) {
for (j in seq) {
if ((v[i]==v[j])&&(i!=j)&&(counter[j]==0)&&(counter[i]==0)){
p_v<-c(p_v,(p_x[i]+p_x[j]))
print("Samesies")
print(v[i])
print(v[j])
counter[j]<-1
counter[i]<-1
}
}
}
for (k in v) {
for (l in seq) {
#if(k==l){
print("Hmm")
print(i)
print(j)
print("Anything")
print(v[k])
print(v[l])
#}
if ((v[k]==v[l])&&(k==l)&&(counter[k]==0)&&(counter[l]==0))
#((v[i]==v[j])&&(i!=j)&&(counter[j]==0)&&(counter[i]==0))
{
print("Dittos")
print(v[k])
print(v[l])
p_v<-c(p_v,p_x[k])
}
}
}
counter
p_v
p_v<-double()
seq<-1:5
counter<-c(0,0,0,0,0)
for (i in v) {
for (j in seq) {
if ((v[i]==v[j])&&(i!=j)&&(counter[j]==0)&&(counter[i]==0)){
p_v<-c(p_v,(p_x[i]+p_x[j]))
print("Samesies")
print(v[i])
print(v[j])
counter[j]<-1
counter[i]<-1
}
}
}
for (k in seq) {
for (l in seq) {
if(k==l){
print("Hmm")
print(i)
print(j)
print("Anything")
print(v[k])
print(v[l])
}
if ((v[k]==v[l])&&(k==l)&&(counter[k]==0)&&(counter[l]==0))
#((v[i]==v[j])&&(i!=j)&&(counter[j]==0)&&(counter[i]==0))
{
print("Dittos")
print(v[k])
print(v[l])
p_v<-c(p_v,p_x[k])
}
}
}
counter
p_v
p_v<-double()
seq<-1:5
counter<-c(0,0,0,0,0)
for (i in seq) {
for (j in seq) {
if ((v[i]==v[j])&&(i!=j)&&(counter[j]==0)&&(counter[i]==0)){
p_v<-c(p_v,(p_x[i]+p_x[j]))
print("Samesies")
print(v[i])
print(v[j])
counter[j]<-1
counter[i]<-1
}
}
}
for (k in seq) {
for (l in seq) {
if ((v[k]==v[l])&&(k==l)&&(counter[k]==0)&&(counter[l]==0))
#((v[i]==v[j])&&(i!=j)&&(counter[j]==0)&&(counter[i]==0))
{
print("Dittos")
print(v[k])
print(v[l])
p_v<-c(p_v,p_x[k])
}
}
}
counter
p_v
v
p_v<-double()
final_v<-double()
seq<-1:5
counter<-c(0,0,0,0,0)
#loop logic to add up same probabilities
for (i in seq) {
for (j in seq) {
if ((v[i]==v[j])&&(i!=j)&&(counter[j]==0)&&(counter[i]==0)){
p_v<-c(p_v,(p_x[i]+p_x[j]))
final_v<-c(final_v,v[i])
counter[j]<-1
counter[i]<-1
}
}
}
#loop logic to include probabilities of distinct probabilities
for (k in seq) {
for (l in seq) {
if ((v[k]==v[l])&&(k==l)&&(counter[k]==0)&&(counter[l]==0))
{
p_v<-c(p_v,p_x[k])
final_v<-c(final_v,v[k])
}
}
}
p_v
final_v
print("Question 3")
x<-c(-2,-1,0,1,2)
p_x<-c(1/5,1/5,2/5,2/15,1/15)
v<-(x^2+1)
p_v<-double()
final_v<-double()
seq<-1:5
counter<-c(0,0,0,0,0)
#loop logic to add up same probabilities
for (i in seq) {
for (j in seq) {
if ((v[i]==v[j])&&(i!=j)&&(counter[j]==0)&&(counter[i]==0)){
p_v<-c(p_v,(p_x[i]+p_x[j]))
final_v<-c(final_v,v[i])
counter[j]<-1
counter[i]<-1
}
}
}
#loop logic to include probabilities of distinct probabilities
for (k in seq) {
for (l in seq) {
if ((v[k]==v[l])&&(k==l)&&(counter[k]==0)&&(counter[l]==0))
{
p_v<-c(p_v,p_x[k])
final_v<-c(final_v,v[k])
}
}
}
print("Probability distribution of v")
data.frame(final_v,p_v)
v_bar<-c(1,2,3,4,5)
barplot(p_v,v_bar,names.arg=v,xlab="Random variable values (v)", ylab="Probability of outcomes",main="Bar Plot of Probability Distribution")
v_bar<-c(1,2,3)
barplot(p_v,v_bar,names.arg=final_v,xlab="Random variable values (v)", ylab="Probability of outcomes",main="Bar Plot of Probability Distribution")
print("Question 3")
x<-c(-2,-1,0,1,2)
p_x<-c(1/5,1/5,2/5,2/15,1/15)
v<-(x^2+1)
p_v<-double()
final_v<-double()
seq<-1:length(x)
counter<-numeric(length(x))#(0,0,0,0,0)
#loop logic to add up probabilities of same values
for (i in seq) {
for (j in seq) {
if ((v[i]==v[j])&&(i!=j)&&(counter[j]==0)&&(counter[i]==0)){
p_v<-c(p_v,(p_x[i]+p_x[j]))
final_v<-c(final_v,v[i])
counter[j]<-1
counter[i]<-1
}
}
}
#loop logic to include probabilities of distinct values
for (k in seq) {
for (l in seq) {
if ((v[k]==v[l])&&(k==l)&&(counter[k]==0)&&(counter[l]==0))
{
p_v<-c(p_v,p_x[k])
final_v<-c(final_v,v[k])
}
}
}
print("Probability distribution of v")
data.frame(final_v,p_v)
v_bar<-c(1,2,3)
barplot(p_v,v_bar,names.arg=final_v,xlab="Random variable values (v)", ylab="Probability of outcomes",main="Bar Plot of Probability Distribution")
#Lab 3-1
print("Question 1")
f<-function(k)(8*k^2+7*k-1)
k<-uniroot((8*k^2+7*k-1),lower=0,upper=1)$root
print("Value of k: ")
k
x<-c(1,2,3,4,5,6,7)
p<-c(k,2*k,3*k,k^2,k^2+k,2*k^2,4*k^2)
p
y<-data.frame(x,p)
y
barplot(p,x,names.arg=x,xlab="Random variable values",ylab="Probability of outcomes",main="Bar Plot of Probability Distribution")
print("P(x<5): ")
sum(p[1]+p[2]+p[3]+p[4])
print("P(1<=x<=5): ")
sum(p[1]+p[2]+p[3]+p[4]+p[5])
print("Question 2")
f<-function(k)(6*k-0.4)
k<-uniroot(f,lower=0,upper=1)$root
print("Value of k: ")
k
x<-c(-2,-1,0,1,2,3)
p<-c(0.1,k,0.2,2*k,0.3,3*k)
p
y<-data.frame(x,p)
y
x_bar<-c(1,2,3,4,5)
barplot(p,x_bar,names.arg=x,xlab="Random variable values", ylab="Probability of outcomes",
main="Bar Plot of Probability Distribution")
print("P(x<2): ")
sum(p[1]+p[2]+p[3]+p[4])
cum_probability<-cumsum(p)
cframe<-data.frame(x,cum_probability)
print("CDF:")
cframe
print("Question 3")
x<-c(-2,-1,0,1,2)
p_x<-c(1/5,1/5,2/5,2/15,1/15)
v<-(x^2+1)
p_v<-double()
final_v<-double()
seq<-1:length(x)
counter<-numeric(length(x))
#loop logic to add up probabilities of same values
for (i in seq) {
for (j in seq) {
if ((v[i]==v[j])&&(i!=j)&&(counter[j]==0)&&(counter[i]==0)){
p_v<-c(p_v,(p_x[i]+p_x[j]))
final_v<-c(final_v,v[i])
counter[j]<-1
counter[i]<-1
}
}
}
#loop logic to include probabilities of distinct values
for (k in seq) {
for (l in seq) {
if ((v[k]==v[l])&&(k==l)&&(counter[k]==0)&&(counter[l]==0))
{
p_v<-c(p_v,p_x[k])
final_v<-c(final_v,v[k])
}
}
}
print("Probability distribution of v")
data.frame(final_v,p_v)
v_bar<-c(1,2,3)
barplot(p_v,v_bar,names.arg=final_v,xlab="Random variable values (v)", ylab="Probability of outcomes",
main="Bar Plot of Probability Distribution")
print("Question 4")
x<-c(-3,-2,-1,0,1,2)
p<-c(0.05,0.1,0.2,0.3,0.2,0.15)
x_Px<-x*p
x2<-x*x
x2_Px<-x2*p
data.frame(x,p,x_Px,x2_Px)
E_x<-sum(x_Px)
E_x2<-sum(x2Px)
Var=E_x2-(E_x^2)
print("Mean:")
E_x
print("Variance:")
Var
print("Question 5")
x<-c(0,1,2)
p<-c(1/15,7/15,7/15)
x_Px<-x*p
data.frame(x,p,x_Px)
E_x<-sum(x_Px)
print("The Expectation:")
E_x
print("or")
as.integer(E_x)
barplot(p,x,names.arg=x,ylim=c(0,.70),xlab="Random variable values", ylab="Probability of outcomes",
main="Bar Plot of Probability Distribution")
print("Question 1")
x<-0:10
prob<-dbinom(x,10,.5)
prob
barplot(prob, col = "red", names.arg = x, main = "Binomial Distribution Q1 \n(n = 10, p = 0.5)")
-
print("Question 1")
x<-0:10
prob<-dbinom(x,10,.5)
prob
barplot(prob, col = "red", names.arg = x, main = "Binomial Distribution Q1 \n(n = 10, p = 0.5)")
print("Probability of no graduates: ")
prob[1]
print("Probability of 1 graduate: ")
prob[2]
print("Probability of at lest 1 graduate: ")
cumsum(p)-prob[1]
y<-(cumsum(p)-prob[1])
y
y<-(cumsum(p))
y
typeof(y)
data.class(y)
y
print("Question 2")
f<-function(k)(6*k-0.4)
k<-uniroot(f,lower=0,upper=1)$root
print("Value of k: ")
k
x<-c(-2,-1,0,1,2,3)
p<-c(0.1,k,0.2,2*k,0.3,3*k)
p
y<-data.frame(x,p)
y
x_bar<-c(1,2,3,4,5)
barplot(p,x_bar,names.arg=x,xlab="Random variable values", ylab="Probability of outcomes",
main="Bar Plot of Probability Distribution")
print("P(x<2): ")
sum(p[1]+p[2]+p[3]+p[4])
cum_probability<-cumsum(p)
cum_probability
cframe<-data.frame(x,cum_probability)
print("CDF:")
cframe
y<-(cumsum(prob[11]))
y
y<-(cumsum(prob[11])-prob[1])
y
y<-(cumsum(prob[11]))
y-prob[1]
prob[1print("Question 2")
prob[1]
y<-(cumsum(prob[11]))
y
y
y<-(cumsum(prob[10]))
y
y<-(cumsum(prob[1]))
y
y<-(cumsum(prob))
y
y[11]
y[11]-prob[1]
print("Question 2")
x<-0:15
mean<-5
variance<-10/3
q<-variance/mean
p<-1-q
p
prob<-dbinom(x,15,1/3)
prob
prob<-dbinom(x,15,p)
prob
n<-mean/p
n
print("Question 2")
x<-0:15
mean<-5
variance<-10/3
q<-variance/mean
p<-1-q
n<-mean/p
prob<-dbinom(x,15,p)
prob
barplot(prob, col = "yellow", ylim = c(0,.25), names.arg = x, main = "Binomial Distribution Question 2 \n(n = 15, p = 1/3)")
print("Value of n: ")
n
print("Value of p: ")
p
print("Value of q: ")
q
barplot(prob, col = "black", ylim = c(0,.25), names.arg = x, main = "Binomial Distribution Question 2 \n(n = 15, p = 1/3)")
print("Question 1")
x<-0:10
prob<-dbinom(x,10,.5)
prob
barplot(prob, col = "black", names.arg = x, main = "Binomial Distribution Q1 \n(n = 10, p = 0.5)")
print("Probability of no graduates: ")
prob[1]
print("Probability of 1 graduate: ")
prob[2]
print("Probability of at lest 1 graduate: ")
y<-(cumsum(prob))
y[11]-prob[1]
print("Question 2")
x<-0:15
mean<-5
variance<-10/3
q<-variance/mean
p<-1-q
n<-mean/p
prob<-dbinom(x,15,p)
prob
barplot(prob, col = "black", ylim = c(0,.25), names.arg = x, main = "Binomial Distribution Question 2 \n(n = 15, p = 1/3)")
print("Value of n: ")
n
print("Value of p: ")
p
print("Value of q: ")
q
print("Probability of less than 3 accidents occurring: ")
ppois(2,7.6)
print("Probability of exactly 3 accidents occurring: ")
dpois(3,7.6)
print("Question 4")
x<-0:100
prob<-dbinom(x,100,1/250)
prob
barplot(prob, col = "black", names.arg = x, main = "Binomial Distribution Q1 \n(n = 10, p = 0.5)")
prob[1]
print("Probability of exactly 1 defective items: ")
prob[2]
y<-(cumsum(prob))
y[101]-prob[1]
print("Question 1")
x<-0:10
prob<-dbinom(x,10,.5)
prob
barplot(prob, col = "black", names.arg = x, main = "Bar plot of Binomial Distribution")
print("Probability of no graduates: ")
prob[1]
print("Probability of 1 graduate: ")
prob[2]
print("Probability of at lest 1 graduate: ")
y<-(cumsum(prob))
y[11]-prob[1]
print("Question 2")
x<-0:15
mean<-5
variance<-10/3
q<-variance/mean
p<-1-q
n<-mean/p
prob<-dbinom(x,15,p)
prob
barplot(prob, col = "black", ylim = c(0,.25), names.arg = x, main = "Bar plot ofBinomial Distribution")
print("Value of n: ")
n
print("Value of p: ")
p
print("Value of q: ")
q
print("Question 2")
x<-0:15
mean<-5
variance<-10/3
q<-variance/mean
p<-1-q
n<-mean/p
prob<-dbinom(x,15,p)
prob
barplot(prob, col = "black", ylim = c(0,.25), names.arg = x, main = "Bar plot of Binomial Distribution")
print("Value of n: ")
n
print("Value of p: ")
p
print("Value of q: ")
q
print("Question 3")
print("Probability of less than 3 accidents occurring: ")
ppois(2,7.6)
print("Probability of exactly 3 accidents occurring: ")
dpois(3,7.6)
print("Question 3")
print("Probability of less than 3 accidents occurring: ")
ppois(2,7.6)
print("Probability of exactly 3 accidents occurring: ")
dpois(3,7.6)
print("Question 4")
x<-0:100
prob<-dbinom(x,100,1/250)
prob
barplot(prob, col = "black", names.arg = x, main = "Bar plot of Binomial Distribution)")
print("Probability of no defective items: ")
prob[1]
print("Probability of exactly 1 defective items: ")
prob[2]
print("Probability of at least 1 defective items: ")
y<-(cumsum(prob))
y[101]-prob[1]
